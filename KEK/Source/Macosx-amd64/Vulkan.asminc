%ifndef MACOSX_AMD64_VULKAN_ASMINC
%define MACOSX_AMD64_VULKAN_ASMINC

%include "Common.asminc"
%if BUILD_IS_SYSTEM_MACOSX && BUILD_IS_PLATFORM_AMD64
%include "Macosx-amd64/Window.asminc"
%include "Macosx-amd64/VulkanCalls.asminc"
%include "Macosx-amd64/VulkanStructs.asminc"

struc Vulkan
    .window:                     resb Window_size                   ; Window
    .applicationName:            resq 1                             ; const char*
    .engineName:                 resq 1                             ; const char*
    .applicationVersion:         resd 1                             ; uint32_t
    .engineVersion:              resd 1                             ; uint32_t
    .apiVersion:                 resd 2                             ; uint32_t
    .instance:                   resq 1                             ; VkInstance
%if BUILD_IS_CONFIG_DEBUG
    .debugMessenger:             resq 1                             ; VkDebugUtilsMessengerEXT
%endif
    .surface:                    resq 1                             ; VkSurfaceKHR
    .physicalDevice:             resq 1                             ; VkPhysicalDevice
    .physicalDeviceCapabilities: resb VkSurfaceCapabilitiesKHR_size ; VkSurfaceCapabilitiesKHR
    .device:                     resq 1                             ; VkDevice
    .graphicsPresentQueue:       resq 1                             ; VkQueue
    .graphicsPresentQueueIndex:  resd 1                             ; uint32_t
    .swapchainFormat:            resd 1                             ; VkFormat
    .swapchainPresentMode:       resd 2                             ; VkPresentModeKHR
    .swapchain:                  resq 1                             ; VkSwapchainKHR
    .swapchainImageCount:        resd 2                             ; uint32_t
    .swapchainImages:            resq 1                             ; VkImage*
    .swapchainImageViews:        resq 1                             ; VkImageView*
endstruc

extern _VulkanAlloc
extern _VulkanFree   ; rdi => Vulkan
extern _VulkanCtor   ; rdi => Vulkan, esi => width, edx => height, rcx => title, r8 => applicationName, r9 => engineName, rsp >= applicationVersion, rsp + 8h => engineVersion
extern _VulkanDtor   ; rdi => Vulkan
extern _VulkanInit   ; rdi => Vulkan
extern _VulkanDeinit ; rdi => Vulkan

extern _VulkanTest ; rdi => Vulkan

%endif

%endif